{"version":3,"sources":["../../../projects/chess-ts/src/lib/chess-enums.ts","../../../projects/chess-ts/src/lib/chess.ts","../../../projects/chess-ts/src/public_api.ts","./src/app/app.component.css","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n/* todo:\n    make async and sync alternatives to the calling.\n    bring enums into the chess.ts file.\n    fix public/private variables\n    make sure everything has an explicit type\n    create separate classes game, fen, piece\n    fix the todos\n    add documentation and generate API doc\n*/\n\nexport enum Colour {\n    WHITE = 'w',\n    BLACK = 'b'\n}\n\nexport enum PieceType {\n    PAWN = 'p',\n    KNIGHT = 'n',\n    BISHOP = 'b',\n    ROOK = 'r',\n    QUEEN = 'q',\n    KING = 'k'\n}\n\nexport class Move {\n    constructor(public from: string, public to: string,\n        public promotion?: string) {}\n}","import { Colour, PieceType, Move } from './chess-enums';\nimport { EventEmitter } from '@angular/core';\n\nexport class Chess {\n\n    public EMPTY = -1;\n    public onChange: EventEmitter<void> = new EventEmitter<void>();\n\n\n    SYMBOLS = 'pnbrqkPNBRQK';\n\n    DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\n    POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*'];\n\n    PAWN_OFFSETS = {\n        b: [16, 32, 17, 15],\n        w: [-16, -32, -17, -15]\n    };\n\n    PIECE_OFFSETS = {\n        n: [-18, -33, -31, -14, 18, 33, 31, 14],\n        b: [-17, -15, 17, 15],\n        r: [-16, 1, 16, -1],\n        q: [-17, -16, -15, 1, 17, 16, 15, -1],\n        k: [-17, -16, -15, 1, 17, 16, 15, -1]\n    };\n\n    ATTACKS = [\n        20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20, 0,\n        0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\n        0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\n        0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\n        0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n        24, 24, 24, 24, 24, 24, 56, 0, 56, 24, 24, 24, 24, 24, 24, 0,\n        0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\n        0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\n        0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\n        0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\n        20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20\n    ];\n\n    RAYS = [\n        17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0,\n        0, 17, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 0,\n        0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0, 0, 0,\n        0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0,\n        0, 0, 0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 17, 0, 16, 0, 15, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0, 0, 0,\n        1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0,\n        0, 0, 0, 0, 0, 0, -15, -16, -17, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, -15, 0, -16, 0, -17, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17, 0, 0, 0, 0, 0,\n        0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0,\n        0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0,\n        0, -15, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0,\n        -15, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, -17\n    ];\n\n    SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 };\n\n    public FLAGS = {\n        NORMAL: 'n',\n        CAPTURE: 'c',\n        BIG_PAWN: 'b',\n        EP_CAPTURE: 'e',\n        PROMOTION: 'p',\n        KSIDE_CASTLE: 'k',\n        QSIDE_CASTLE: 'q'\n    };\n\n    BITS = {\n        NORMAL: 1,\n        CAPTURE: 2,\n        BIG_PAWN: 4,\n        EP_CAPTURE: 8,\n        PROMOTION: 16,\n        KSIDE_CASTLE: 32,\n        QSIDE_CASTLE: 64\n    };\n\n    RANK_1 = 7;\n    RANK_2 = 6;\n    RANK_3 = 5;\n    RANK_4 = 4;\n    RANK_5 = 3;\n    RANK_6 = 2;\n    RANK_7 = 1;\n    RANK_8 = 0;\n\n    SQUARES = {\n        a8: 0, b8: 1, c8: 2, d8: 3, e8: 4, f8: 5, g8: 6, h8: 7,\n        a7: 16, b7: 17, c7: 18, d7: 19, e7: 20, f7: 21, g7: 22, h7: 23,\n        a6: 32, b6: 33, c6: 34, d6: 35, e6: 36, f6: 37, g6: 38, h6: 39,\n        a5: 48, b5: 49, c5: 50, d5: 51, e5: 52, f5: 53, g5: 54, h5: 55,\n        a4: 64, b4: 65, c4: 66, d4: 67, e4: 68, f4: 69, g4: 70, h4: 71,\n        a3: 80, b3: 81, c3: 82, d3: 83, e3: 84, f3: 85, g3: 86, h3: 87,\n        a2: 96, b2: 97, c2: 98, d2: 99, e2: 100, f2: 101, g2: 102, h2: 103,\n        a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n    };\n\n    ROOKS = {\n        w: [{ square: this.SQUARES.a1, flag: this.BITS.QSIDE_CASTLE },\n        { square: this.SQUARES.h1, flag: this.BITS.KSIDE_CASTLE }],\n        b: [{ square: this.SQUARES.a8, flag: this.BITS.QSIDE_CASTLE },\n        { square: this.SQUARES.h8, flag: this.BITS.KSIDE_CASTLE }]\n    };\n\n    board = new Array<ChessPiece>(128);\n    kings = { w: this.EMPTY, b: this.EMPTY };\n    public turn = Colour.WHITE;\n    castling: Castling = { w: 0, b: 0 };\n    ep_square = this.EMPTY;\n    half_moves = 0;\n    move_number = 1;\n    history = [];\n    header: any = {};\n\n    constructor(fen?: string) {\n        /* if the user passes in a fen string, load it, else default to\n         * starting position\n         */\n        if (typeof fen === 'undefined') {\n            this.load(this.DEFAULT_POSITION);\n        } else {\n            this.load(fen);\n        }\n    }\n\n    public clear() {\n        this.board = new Array(128);\n        this.kings = { w: this.EMPTY, b: this.EMPTY };\n        this.turn = Colour.WHITE;\n        this.castling = { w: 0, b: 0 };\n        this.ep_square = this.EMPTY;\n        this.half_moves = 0;\n        this.move_number = 1;\n        this.history = [];\n        this.header = {};\n        this.update_setup(this.generate_fen());\n    }\n\n    public reset() {\n        this.load(this.DEFAULT_POSITION);\n    }\n\n    public load(fen) {\n        const tokens = fen.split(/\\s+/);\n        const position = tokens[0];\n        let square = 0;\n\n        if (!this.validate_fen(fen).valid) {\n            return false;\n        }\n\n        this.clear();\n\n        for (let i = 0; i < position.length; i++) {\n            const piece = position.charAt(i);\n\n            if (piece === '/') {\n                square += 8;\n            } else if (this.is_digit(piece)) {\n                square += parseInt(piece, 10);\n            } else {\n                const color = (piece < 'a') ? Colour.WHITE : Colour.BLACK;\n                this.put({ type: piece.toLowerCase(), color: color }, this.algebraic(square));\n                square++;\n            }\n        }\n\n        this.turn = tokens[1];\n\n        if (tokens[2].indexOf('K') > -1) {\n            this.castling.w |= this.BITS.KSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('Q') > -1) {\n            this.castling.w |= this.BITS.QSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('k') > -1) {\n            this.castling.b |= this.BITS.KSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('q') > -1) {\n            this.castling.b |= this.BITS.QSIDE_CASTLE;\n        }\n\n        this.ep_square = (tokens[3] === '-') ? this.EMPTY : this.SQUARES[tokens[3]];\n        this.half_moves = parseInt(tokens[4], 10);\n        this.move_number = parseInt(tokens[5], 10);\n\n        this.update_setup(this.generate_fen());\n        this.onChange.emit();\n        return true;\n    }\n\n    /* TODO: this function is pretty much crap - it validates structure but\n     * completely ignores content (e.g. doesn't verify that each side has a king)\n     * ... we should rewrite this, and ditch the silly error_number field while\n     * we're at it\n     */\n    public validate_fen(fen): FenValidationResult {\n        const errors = {\n            0: 'No errors.',\n            1: 'FEN string must contain six space-delimited fields.',\n            2: '6th field (move number) must be a positive integer.',\n            3: '5th field (half move counter) must be a non-negative integer.',\n            4: '4th field (en-passant square) is invalid.',\n            5: '3rd field (castling availability) is invalid.',\n            6: '2nd field (side to move) is invalid.',\n            7: '1st field (piece positions) does not contain 8 \\'/\\'-delimited rows.',\n            8: '1st field (piece positions) is invalid [consecutive numbers].',\n            9: '1st field (piece positions) is invalid [invalid piece].',\n            10: '1st field (piece positions) is invalid [row too large].',\n            11: 'Illegal en-passant square',\n        };\n\n        /* 1st criterion: 6 space-seperated fields? */\n        const tokens = fen.split(/\\s+/);\n        if (tokens.length !== 6) {\n            return { valid: false, error_number: 1, error: errors[1] };\n        }\n\n        /* 2nd criterion: move number field is a integer value > 0? */\n        if (isNaN(tokens[5]) || (parseInt(tokens[5], 10) <= 0)) {\n            return { valid: false, error_number: 2, error: errors[2] };\n        }\n\n        /* 3rd criterion: half move counter is an integer >= 0? */\n        if (isNaN(tokens[4]) || (parseInt(tokens[4], 10) < 0)) {\n            return { valid: false, error_number: 3, error: errors[3] };\n        }\n\n        /* 4th criterion: 4th field is a valid e.p.-string? */\n        if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n            return { valid: false, error_number: 4, error: errors[4] };\n        }\n\n        /* 5th criterion: 3th field is a valid castle-string? */\n        if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n            return { valid: false, error_number: 5, error: errors[5] };\n        }\n\n        /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n        if (!/^(w|b)$/.test(tokens[1])) {\n            return { valid: false, error_number: 6, error: errors[6] };\n        }\n\n        /* 7th criterion: 1st field contains 8 rows? */\n        const rows = tokens[0].split('/');\n        if (rows.length !== 8) {\n            return { valid: false, error_number: 7, error: errors[7] };\n        }\n\n        /* 8th criterion: every row is valid? */\n        for (let i = 0; i < rows.length; i++) {\n            /* check for right sum of fields AND not two numbers in succession */\n            let sum_fields = 0;\n            let previous_was_number = false;\n\n            for (let k = 0; k < rows[i].length; k++) {\n                if (!isNaN(rows[i][k])) {\n                    if (previous_was_number) {\n                        return { valid: false, error_number: 8, error: errors[8] };\n                    }\n                    sum_fields += parseInt(rows[i][k], 10);\n                    previous_was_number = true;\n                } else {\n                    if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n                        return { valid: false, error_number: 9, error: errors[9] };\n                    }\n                    sum_fields += 1;\n                    previous_was_number = false;\n                }\n            }\n            if (sum_fields !== 8) {\n                return { valid: false, error_number: 10, error: errors[10] };\n            }\n        }\n\n        if ((tokens[3][1] === '3' && tokens[1] === 'w') ||\n            (tokens[3][1] === '6' && tokens[1] === 'b')) {\n            return { valid: false, error_number: 11, error: errors[11] };\n        }\n\n        /* everything's okay! */\n        return { valid: true, error_number: 0, error: errors[0] };\n    }\n\n    generate_fen() {\n        let empty = 0;\n        let fen = '';\n\n        for (let i = this.SQUARES.a8; i <= this.SQUARES.h1; i++) {\n            if (this.board[i] === undefined) {\n                empty++;\n            } else {\n                if (empty > 0) {\n                    fen += empty;\n                    empty = 0;\n                }\n                const color = this.board[i].color;\n                const piece = this.board[i].type;\n\n                fen += (color === Colour.WHITE) ?\n                    piece.toUpperCase() : piece.toLowerCase();\n            }\n\n            if ((i + 1) & 0x88) {\n                if (empty > 0) {\n                    fen += empty;\n                }\n\n                if (i !== this.SQUARES.h1) {\n                    fen += '/';\n                }\n\n                empty = 0;\n                i += 8;\n            }\n        }\n\n        let cflags = '';\n        if (this.castling[Colour.WHITE] & this.BITS.KSIDE_CASTLE) { cflags += 'K'; }\n        if (this.castling[Colour.WHITE] & this.BITS.QSIDE_CASTLE) { cflags += 'Q'; }\n        if (this.castling[Colour.BLACK] & this.BITS.KSIDE_CASTLE) { cflags += 'k'; }\n        if (this.castling[Colour.BLACK] & this.BITS.QSIDE_CASTLE) { cflags += 'q'; }\n\n        /* do we have an empty castling flag? */\n        cflags = cflags || '-';\n        const epflags = (this.ep_square === this.EMPTY) ? '-' : this.algebraic(this.ep_square);\n\n        return [fen, this.turn, cflags, epflags, this.half_moves, this.move_number].join(' ');\n    }\n\n    set_header(args) {\n        for (let i = 0; i < args.length; i += 2) {\n            if (typeof args[i] === 'string' &&\n                typeof args[i + 1] === 'string') {\n                this.header[args[i]] = args[i + 1];\n            }\n        }\n        return this.header;\n    }\n\n    /* called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object.  if the FEN is\n     * equal to the default position, the SetUp and FEN are deleted\n     * the setup is only updated if history.length is zero, ie moves haven't been\n     * made.\n     */\n    update_setup(fen) {\n        if (history.length > 0) { return; }\n\n        if (fen !== this.DEFAULT_POSITION) {\n            this.header['SetUp'] = '1';\n            this.header['FEN'] = fen;\n        } else {\n            delete this.header['SetUp'];\n            delete this.header['FEN'];\n        }\n    }\n\n    public get(square) {\n        const piece = this.board[this.SQUARES[square]];\n        return (piece) ? { type: piece.type, color: piece.color } : undefined;\n    }\n\n    public put(piece, square) {\n        /* check for valid piece object */\n        if (!('type' in piece && 'color' in piece)) {\n            return false;\n        }\n\n        /* check for piece */\n        if (this.SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n            return false;\n        }\n\n        /* check for valid square */\n        if (!(square in this.SQUARES)) {\n            return false;\n        }\n\n        const sq = this.SQUARES[square];\n\n        /* don't let the user place more than one king */\n        if (piece.type === PieceType.KING &&\n            !(this.kings[piece.color] === this.EMPTY || this.kings[piece.color] === sq)) {\n            return false;\n        }\n\n        this.board[sq] = { type: piece.type, color: piece.color };\n        if (piece.type === PieceType.KING) {\n            this.kings[piece.color] = sq;\n        }\n\n        this.update_setup(this.generate_fen());\n        return true;\n    }\n\n    public remove(square) {\n        const piece = this.get(square);\n        this.board[this.SQUARES[square]] = undefined;\n        if (piece && piece.type === PieceType.KING) {\n            this.kings[piece.color] = this.EMPTY;\n        }\n\n        this.update_setup(this.generate_fen());\n        return piece;\n    }\n\n    build_move(board, from, to, flags, promotion?) {\n        const move = {\n            color: this.turn,\n            from: from,\n            to: to,\n            flags: flags,\n            piece: board[from].type,\n            // dgm: these needed to exist for typescript\n            promotion: undefined,\n            captured: undefined\n        };\n\n        if (promotion) {\n            move.flags |= this.BITS.PROMOTION;\n            move.promotion = promotion;\n        }\n\n        if (board[to]) {\n            move.captured = board[to].type;\n        } else if (flags & this.BITS.EP_CAPTURE) {\n            move.captured = PieceType.PAWN;\n        }\n        return move;\n    }\n\n    private add_move(board, moves, from, to, flags) {\n        /* if pawn promotion */\n        if (board[from].type === PieceType.PAWN &&\n            (this.rank(to) === this.RANK_8 || this.rank(to) === this.RANK_1)) {\n            const pieces = [PieceType.QUEEN, PieceType.ROOK, PieceType.BISHOP, PieceType.KNIGHT];\n            for (let i = 0, len = pieces.length; i < len; i++) {\n                moves.push(this.build_move(board, from, to, flags, pieces[i]));\n            }\n        } else {\n            moves.push(this.build_move(board, from, to, flags));\n        }\n    }\n\n    generate_moves(options?) {\n\n\n        const moves = [];\n        const us = this.turn;\n        const them = this.swap_color(us);\n        const second_rank = { b: this.RANK_7, w: this.RANK_2 };\n\n        let first_sq = this.SQUARES.a8;\n        let last_sq = this.SQUARES.h1;\n        let single_square = false;\n\n        /* do we want legal moves? */\n        const legal = (typeof options !== 'undefined' && 'legal' in options) ?\n            options.legal : true;\n\n        /* are we generating moves for a single square? */\n        if (typeof options !== 'undefined' && 'square' in options) {\n            if (options.square in this.SQUARES) {\n                first_sq = last_sq = this.SQUARES[options.square];\n                single_square = true;\n            } else {\n                /* invalid square */\n                return [];\n            }\n        }\n\n        for (let i = first_sq; i <= last_sq; i++) {\n            /* did we run off the end of the board */\n            if (i & 0x88) { i += 7; continue; }\n\n            const piece = this.board[i];\n            if (piece === undefined || piece.color !== us) {\n                continue;\n            }\n\n            if (piece.type === PieceType.PAWN) {\n                /* single square, non-capturing */\n                const square1 = i + this.PAWN_OFFSETS[us][0];\n                if (this.board[square1] === undefined) {\n                    this.add_move(this.board, moves, i, square1, this.BITS.NORMAL);\n\n                    /* double square */\n                    const square = i + this.PAWN_OFFSETS[us][1];\n                    if (second_rank[us] === this.rank(i) && this.board[square] === undefined) {\n                        this.add_move(this.board, moves, i, square, this.BITS.BIG_PAWN);\n                    }\n                }\n\n                /* pawn captures */\n                for (let j = 2; j < 4; j++) {\n                    const square = i + this.PAWN_OFFSETS[us][j];\n                    if (square & 0x88) { continue; }\n\n                    if (this.board[square] !== undefined &&\n                        this.board[square].color === them) {\n                        this.add_move(this.board, moves, i, square, this.BITS.CAPTURE);\n                    } else if (square === this.ep_square) {\n                        this.add_move(this.board, moves, i, this.ep_square, this.BITS.EP_CAPTURE);\n                    }\n                }\n            } else {\n                for (let j = 0, len = this.PIECE_OFFSETS[piece.type].length; j < len; j++) {\n                    const offset = this.PIECE_OFFSETS[piece.type][j];\n                    let square = i;\n\n                    while (true) {\n                        square += offset;\n                        if (square & 0x88) { break; }\n\n                        if (this.board[square] === undefined) {\n                            this.add_move(this.board, moves, i, square, this.BITS.NORMAL);\n                        } else {\n                            if (this.board[square].color === us) { break; }\n                            this.add_move(this.board, moves, i, square, this.BITS.CAPTURE);\n                            break;\n                        }\n\n                        /* break, if knight or king */\n                        if (piece.type === 'n' || piece.type === 'k') { break; }\n                    }\n                }\n            }\n        }\n\n        /* check for castling if: a) we're generating all moves, or b) we're doing\n         * single square move generation on the king's square\n         */\n        if ((!single_square) || last_sq === this.kings[us]) {\n            /* king-side castling */\n            if (this.castling[us] & this.BITS.KSIDE_CASTLE) {\n                const castling_from = this.kings[us];\n                const castling_to = castling_from + 2;\n\n                if (this.board[castling_from + 1] === undefined &&\n                    this.board[castling_to] === undefined &&\n                    !this.attacked(them, this.kings[us]) &&\n                    !this.attacked(them, castling_from + 1) &&\n                    !this.attacked(them, castling_to)) {\n                    this.add_move(this.board, moves, this.kings[us], castling_to,\n                        this.BITS.KSIDE_CASTLE);\n                }\n            }\n\n            /* queen-side castling */\n            if (this.castling[us] & this.BITS.QSIDE_CASTLE) {\n                const castling_from = this.kings[us];\n                const castling_to = castling_from - 2;\n\n                if (this.board[castling_from - 1] === undefined &&\n                    this.board[castling_from - 2] === undefined &&\n                    this.board[castling_from - 3] === undefined &&\n                    !this.attacked(them, this.kings[us]) &&\n                    !this.attacked(them, castling_from - 1) &&\n                    !this.attacked(them, castling_to)) {\n                    this.add_move(this.board, moves, this.kings[us], castling_to,\n                        this.BITS.QSIDE_CASTLE);\n                }\n            }\n        }\n\n        /* return all pseudo-legal moves (this includes moves that allow the king\n         * to be captured)\n         */\n        if (!legal) {\n            return moves;\n        }\n\n        /* filter out illegal moves */\n        const legal_moves = [];\n        for (let i = 0, len = moves.length; i < len; i++) {\n            this.make_move(moves[i]);\n            if (!this.king_attacked(us)) {\n                legal_moves.push(moves[i]);\n            }\n            this.undo_move();\n        }\n\n        return legal_moves;\n    }\n\n    /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n     * disambiguation bugs in Fritz and Chessbase.  See below:\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    move_to_san(move, sloppy?) {\n\n        let output = '';\n\n        if (move.flags & this.BITS.KSIDE_CASTLE) {\n            output = 'O-O';\n        } else if (move.flags & this.BITS.QSIDE_CASTLE) {\n            output = 'O-O-O';\n        } else {\n            const disambiguator = this.get_disambiguator(move, sloppy);\n\n            if (move.piece !== PieceType.PAWN) {\n                output += move.piece.toUpperCase() + disambiguator;\n            }\n\n            if (move.flags & (this.BITS.CAPTURE | this.BITS.EP_CAPTURE)) {\n                if (move.piece === PieceType.PAWN) {\n                    output += this.algebraic(move.from)[0];\n                }\n                output += 'x';\n            }\n\n            output += this.algebraic(move.to);\n\n            if (move.flags & this.BITS.PROMOTION) {\n                output += '=' + move.promotion.toUpperCase();\n            }\n        }\n\n        this.make_move(move);\n        if (this.in_check()) {\n            if (this.in_checkmate()) {\n                output += '#';\n            } else {\n                output += '+';\n            }\n        }\n        this.undo_move();\n\n        return output;\n    }\n\n    // parses all of the decorators out of a SAN string\n    stripped_san(move) {\n        return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '');\n    }\n\n    attacked(color, square) {\n        for (let i = this.SQUARES.a8; i <= this.SQUARES.h1; i++) {\n            /* did we run off the end of the board */\n            if (i & 0x88) { i += 7; continue; }\n\n            /* if empty square or wrong color */\n            if (this.board[i] === undefined || this.board[i].color !== color) { continue; }\n\n            const piece = this.board[i];\n            const difference = i - square;\n            const index = difference + 119;\n\n            if (this.ATTACKS[index] & (1 << this.SHIFTS[piece.type])) {\n                if (piece.type === PieceType.PAWN) {\n                    if (difference > 0) {\n                        if (piece.color === Colour.WHITE) { return true; }\n                    } else {\n                        if (piece.color === Colour.BLACK) { return true; }\n                    }\n                    continue;\n                }\n\n                /* if the piece is a knight or a king */\n                if (piece.type === 'n' || piece.type === 'k') { return true; }\n\n                const offset = this.RAYS[index];\n                let j = i + offset;\n\n                let blocked = false;\n                while (j !== square) {\n                    if (this.board[j] !== undefined) { blocked = true; break; }\n                    j += offset;\n                }\n\n                if (!blocked) { return true; }\n            }\n        }\n\n        return false;\n    }\n\n    king_attacked(color) {\n        return this.attacked(this.swap_color(color), this.kings[color]);\n    }\n\n    public in_check() {\n        return this.king_attacked(this.turn);\n    }\n\n    public in_checkmate() {\n        return this.in_check() && this.generate_moves().length === 0;\n    }\n\n    public in_stalemate() {\n        return !this.in_check() && this.generate_moves().length === 0;\n    }\n\n    public insufficient_material() {\n        const pieces = {};\n        const bishops = [];\n        let num_pieces = 0;\n        let sq_color = 0;\n\n        for (let i = this.SQUARES.a8; i <= this.SQUARES.h1; i++) {\n            sq_color = (sq_color + 1) % 2;\n            if (i & 0x88) { i += 7; continue; }\n\n            const piece = this.board[i];\n            if (piece) {\n                pieces[piece.type] = (piece.type in pieces) ?\n                    pieces[piece.type] + 1 : 1;\n                if (piece.type === PieceType.BISHOP) {\n                    bishops.push(sq_color);\n                }\n                num_pieces++;\n            }\n        }\n\n        /* k vs. k */\n        if (num_pieces === 2) { return true; } else if (num_pieces === 3 && (pieces[PieceType.BISHOP] === 1 ||\n            pieces[PieceType.KNIGHT] === 1)) { return true; } else if (num_pieces === pieces[PieceType.BISHOP] + 2) {\n            let sum = 0;\n            const len = bishops.length;\n            for (let i = 0; i < len; i++) {\n                sum += bishops[i];\n            }\n            if (sum === 0 || sum === len) { return true; }\n        }\n\n        return false;\n    }\n\n    public in_threefold_repetition() {\n        /* TODO: while this function is fine for casual use, a better\n         * implementation would use a Zobrist key (instead of FEN). the\n         * Zobrist key would be maintained in the make_move/undo_move functions,\n         * avoiding the costly that we do below.\n         */\n        const moves = [];\n        const positions = {};\n        let repetition = false;\n\n        while (true) {\n            const move = this.undo_move();\n            if (!move) { break; }\n            moves.push(move);\n        }\n\n        while (true) {\n            /* remove the last two fields in the FEN string, they're not needed\n             * when checking for draw by rep */\n            const fen = this.generate_fen().split(' ').slice(0, 4).join(' ');\n\n            /* has the position occurred three or move times */\n            positions[fen] = (fen in positions) ? positions[fen] + 1 : 1;\n            if (positions[fen] >= 3) {\n                repetition = true;\n            }\n\n            if (!moves.length) {\n                break;\n            }\n            this.make_move(moves.pop());\n        }\n\n        return repetition;\n    }\n\n    push(move) {\n        this.history.push({\n            move: move,\n            kings: { b: this.kings.b, w: this.kings.w },\n            turn: this.turn,\n            castling: { b: this.castling.b, w: this.castling.w },\n            ep_square: this.ep_square,\n            half_moves: this.half_moves,\n            move_number: this.move_number\n        });\n    }\n\n    make_move(move) {\n        const us: Colour = this.turn;\n        const them = this.swap_color(us);\n        this.push(move);\n\n        this.board[move.to] = this.board[move.from];\n        this.board[move.from] = undefined;\n\n        /* if ep capture, remove the captured pawn */\n        if (move.flags & this.BITS.EP_CAPTURE) {\n            if (this.turn === Colour.BLACK) {\n                this.board[move.to - 16] = undefined;\n            } else {\n                this.board[move.to + 16] = undefined;\n            }\n        }\n\n        /* if pawn promotion, replace with new piece */\n        if (move.flags & this.BITS.PROMOTION) {\n            this.board[move.to] = { type: move.promotion, color: us };\n        }\n\n        /* if we moved the king */\n        if (this.board[move.to].type === PieceType.KING) {\n            this.kings[this.board[move.to].color] = move.to;\n\n            /* if we castled, move the rook next to the king */\n            if (move.flags & this.BITS.KSIDE_CASTLE) {\n                const castling_to = move.to - 1;\n                const castling_from = move.to + 1;\n                this.board[castling_to] = this.board[castling_from];\n                this.board[castling_from] = undefined;\n            } else if (move.flags & this.BITS.QSIDE_CASTLE) {\n                const castling_to2 = move.to + 1;\n                const castling_from2 = move.to - 2;\n                this.board[castling_to2] = this.board[castling_from2];\n                this.board[castling_from2] = undefined;\n            }\n\n            /* turn off castling */\n            this.castling[us] = '';\n        }\n\n        /* turn off castling if we move a rook */\n        if (this.castling[us]) {\n            for (let i = 0, len = this.ROOKS[us].length; i < len; i++) {\n                if (move.from === this.ROOKS[us][i].square &&\n                    this.castling[us] & this.ROOKS[us][i].flag) {\n                    this.castling[us] ^= this.ROOKS[us][i].flag;\n                    break;\n                }\n            }\n        }\n\n        /* turn off castling if we capture a rook */\n        if (this.castling[them]) {\n            for (let i = 0, len = this.ROOKS[them].length; i < len; i++) {\n                if (move.to === this.ROOKS[them][i].square &&\n                    this.castling[them] & this.ROOKS[them][i].flag) {\n                    this.castling[them] ^= this.ROOKS[them][i].flag;\n                    break;\n                }\n            }\n        }\n\n        /* if big pawn move, update the en passant square */\n        if (move.flags & this.BITS.BIG_PAWN) {\n            if (this.turn === 'b') {\n                this.ep_square = move.to - 16;\n            } else {\n                this.ep_square = move.to + 16;\n            }\n        } else {\n            this.ep_square = this.EMPTY;\n        }\n\n        /* reset the 50 move counter if a pawn is moved or a piece is captured */\n        if (move.piece === PieceType.PAWN) {\n            this.half_moves = 0;\n        } else if (move.flags & (this.BITS.CAPTURE | this.BITS.EP_CAPTURE)) {\n            this.half_moves = 0;\n        } else {\n            this.half_moves++;\n        }\n\n        if (this.turn === Colour.BLACK) {\n            this.move_number++;\n        }\n        this.turn = this.swap_color(this.turn);\n    }\n\n    undo_move() {\n        const old = this.history.pop();\n        if (old === undefined) { return undefined; }\n\n        const move = old.move;\n        this.kings = old.kings;\n        this.turn = old.turn;\n        this.castling = old.castling;\n        this.ep_square = old.ep_square;\n        this.half_moves = old.half_moves;\n        this.move_number = old.move_number;\n\n        const us = this.turn;\n        const them = this.swap_color(this.turn);\n\n        this.board[move.from] = this.board[move.to];\n        this.board[move.from].type = move.piece;  // to undo any promotions\n        this.board[move.to] = undefined;\n\n        if (move.flags & this.BITS.CAPTURE) {\n            this.board[move.to] = { type: move.captured, color: them };\n        } else if (move.flags & this.BITS.EP_CAPTURE) {\n            let index;\n            if (us === Colour.BLACK) {\n                index = move.to - 16;\n            } else {\n                index = move.to + 16;\n            }\n            this.board[index] = { type: PieceType.PAWN, color: them };\n        }\n\n\n        if (move.flags & (this.BITS.KSIDE_CASTLE | this.BITS.QSIDE_CASTLE)) {\n            let castling_to, castling_from;\n            if (move.flags & this.BITS.KSIDE_CASTLE) {\n                castling_to = move.to + 1;\n                castling_from = move.to - 1;\n            } else if (move.flags & this.BITS.QSIDE_CASTLE) {\n                castling_to = move.to - 2;\n                castling_from = move.to + 1;\n            }\n\n            this.board[castling_to] = this.board[castling_from];\n            this.board[castling_from] = undefined;\n        }\n        return move;\n    }\n\n    /* this function is used to uniquely identify ambiguous moves */\n    get_disambiguator(move, sloppy) {\n        const moves = this.generate_moves({ legal: !sloppy });\n\n        const from = move.from;\n        const to = move.to;\n        const piece = move.piece;\n\n        let ambiguities = 0;\n        let same_rank = 0;\n        let same_file = 0;\n\n        for (let i = 0, len = moves.length; i < len; i++) {\n            const ambig_from = moves[i].from;\n            const ambig_to = moves[i].to;\n            const ambig_piece = moves[i].piece;\n\n            /* if a move of the same piece type ends on the same to square, we'll\n             * need to add a disambiguator to the algebraic notation\n             */\n            if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n                ambiguities++;\n\n                if (this.rank(from) === this.rank(ambig_from)) {\n                    same_rank++;\n                }\n\n                if (this.file(from) === this.file(ambig_from)) {\n                    same_file++;\n                }\n            }\n        }\n\n        if (ambiguities > 0) {\n            /* if there exists a similar moving piece on the same rank and file as\n             * the move in question, use the square as the disambiguator\n             */\n            if (same_rank > 0 && same_file > 0) {\n                return this.algebraic(from);\n            } else if (same_file > 0) {\n                return this.algebraic(from).charAt(1);\n            } else {\n                return this.algebraic(from).charAt(0);\n            }\n        }\n\n        return '';\n    }\n\n    public ascii() {\n        let s = '   +------------------------+\\n';\n        for (let i = this.SQUARES.a8; i <= this.SQUARES.h1; i++) {\n            /* display the rank */\n            if (this.file(i) === 0) {\n                s += ' ' + '87654321'[this.rank(i)] + ' |';\n            }\n\n            /* empty piece */\n            if (this.board[i] === undefined) {\n                s += ' . ';\n            } else {\n                const piece = this.board[i].type;\n                const color = this.board[i].color;\n                const symbol = (color === Colour.WHITE) ?\n                    piece.toUpperCase() : piece.toLowerCase();\n                s += ' ' + symbol + ' ';\n            }\n\n            if ((i + 1) & 0x88) {\n                s += '|\\n';\n                i += 8;\n            }\n        }\n        s += '   +------------------------+\\n';\n        s += '     a  b  c  d  e  f  g  h\\n';\n\n        return s;\n    }\n\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    move_from_san(move, sloppy) {\n        // strip off any move decorations: e.g Nf3+?!\n        const clean_move = this.stripped_san(move);\n\n        // if we're using the sloppy parser run a regex to grab piece, to, and from\n        // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n        const matches = clean_move.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n        let piece;\n        let from;\n        let to;\n        let promotion;\n        if (sloppy) {\n            if (matches) {\n                piece = matches[1];\n                from = matches[2];\n                to = matches[3];\n                promotion = matches[4];\n            }\n        }\n\n        const moves = this.generate_moves();\n        for (let i = 0, len = moves.length; i < len; i++) {\n            // try the strict parser first, then the sloppy parser if requested\n            // by the user\n            if ((clean_move === this.stripped_san(this.move_to_san(moves[i]))) ||\n                (sloppy && clean_move === this.stripped_san(this.move_to_san(moves[i], true)))) {\n                return moves[i];\n            } else {\n                if (matches &&\n                    (!piece || piece.toLowerCase() === moves[i].piece) &&\n                    this.SQUARES[from] === moves[i].from &&\n                    this.SQUARES[to] === moves[i].to &&\n                    (!promotion || promotion.toLowerCase() === moves[i].promotion)) {\n                    return moves[i];\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n\n    /*****************************************************************************\n     * UTILITY FUNCTIONS\n     ****************************************************************************/\n    rank(i) {\n        return i >> 4;\n    }\n\n    file(i) {\n        return i & 15;\n    }\n\n    algebraic(i) {\n        const f = this.file(i), r = this.rank(i);\n        return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1);\n    }\n\n    swap_color(c) {\n        return c === Colour.WHITE ? Colour.BLACK : Colour.WHITE;\n    }\n\n    is_digit(c) {\n        return '0123456789'.indexOf(c) !== -1;\n    }\n\n    /* pretty = external move object */\n    make_pretty(ugly_move) {\n        const move = this.clone(ugly_move);\n        move.san = this.move_to_san(move, false);\n        move.to = this.algebraic(move.to);\n        move.from = this.algebraic(move.from);\n\n        let flags = '';\n\n        for (const flag in this.BITS) {\n            if (this.BITS[flag] & move.flags) {\n                flags += this.FLAGS[flag];\n            }\n        }\n        move.flags = flags;\n\n        return move;\n    }\n\n    clone(obj) {\n        const dupe: any = (obj instanceof Array) ? [] : {};\n\n        for (const property in obj) {\n            if (typeof property === 'object') {\n                dupe[property] = this.clone(obj[property]);\n            } else {\n                dupe[property] = obj[property];\n            }\n        }\n\n        return dupe;\n    }\n\n    trim(str) {\n        return str.replace(/^\\s+|\\s+$/g, '');\n    }\n\n    /*****************************************************************************\n     * DEBUGGING UTILITIES\n     ****************************************************************************/\n    public perft(depth) {\n        const moves = this.generate_moves({ legal: false });\n        let nodes = 0;\n        const color = this.turn;\n\n        for (let i = 0, len = moves.length; i < len; i++) {\n            this.make_move(moves[i]);\n            if (!this.king_attacked(color)) {\n                if (depth - 1 > 0) {\n                    const child_nodes = this.perft(depth - 1);\n                    nodes += child_nodes;\n                } else {\n                    nodes++;\n                }\n            }\n            this.undo_move();\n        }\n\n        return nodes;\n    }\n\n    public getSquares() {\n        /* from the ECMA-262 spec (section 12.6.4):\n         * \"The mechanics of enumerating the properties ... is\n         * implementation dependent\"\n         * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n         * ordered correctly\n         */\n        const keys = [];\n        for (let i = this.SQUARES.a8; i <= this.SQUARES.h1; i++) {\n            if (i & 0x88) { i += 7; continue; }\n            keys.push(this.algebraic(i));\n        }\n        return keys;\n    }\n\n    public getMoves(options) {\n        /* The internal representation of a chess move is in 0x88 format, and\n                 * not meant to be human-readable.  The code below converts the 0x88\n                 * square coordinates to algebraic coordinates.  It also prunes an\n                 * unnecessary move keys resulting from a verbose call.\n                 */\n\n        const ugly_moves = this.generate_moves(options);\n        const moves = [];\n\n        for (let i = 0, len = ugly_moves.length; i < len; i++) {\n\n            /* does the user want a full move object (most likely not), or just\n             * SAN\n             */\n            if (typeof options !== 'undefined' && 'verbose' in options &&\n                options.verbose) {\n                moves.push(this.make_pretty(ugly_moves[i]));\n            } else {\n                moves.push(this.move_to_san(ugly_moves[i], false));\n            }\n        }\n\n        return moves;\n    }\n\n    public get in_draw() {\n        return this.half_moves >= 100 ||\n            this.in_stalemate() ||\n            this.insufficient_material() ||\n            this.in_threefold_repetition();\n    }\n\n    public get game_over() {\n        return this.half_moves >= 100 ||\n            this.in_checkmate() ||\n            this.in_stalemate() ||\n            this.insufficient_material() ||\n            this.in_threefold_repetition();\n    }\n\n    public get fen() {\n        return this.generate_fen();\n    }\n\n    public getPgn(options) {\n        /* using the specification from http://www.chessclub.com/help/PGN-spec\n                 * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n                 */\n        const newline = (typeof options === 'object' &&\n            typeof options.newline_char === 'string') ?\n            options.newline_char : '\\n';\n        const max_width = (typeof options === 'object' &&\n            typeof options.max_width === 'number') ?\n            options.max_width : 0;\n        const result = [];\n        let header_exists = false;\n\n        /* add the PGN header headerrmation */\n        for (const i in this.header) {\n            /* TODO: order of enumerated properties in header object is not\n             * guaranteed, see ECMA-262 spec (section 12.6.4)\n             */\n            result.push('[' + i + ' \\\"' + this.header[i] + '\\\"]' + newline);\n            header_exists = true;\n        }\n\n        if (header_exists && history.length) {\n            result.push(newline);\n        }\n\n        /* pop all of history onto reversed_history */\n        const reversed_history = [];\n        while (history.length > 0) {\n            reversed_history.push(this.undo_move());\n        }\n\n        const moves = [];\n        let move_string = '';\n\n        /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n        while (reversed_history.length > 0) {\n            const move = reversed_history.pop();\n\n            /* if the position started with black to move, start PGN with 1. ... */\n            if (!history.length && move.color === 'b') {\n                move_string = this.move_number + '. ...';\n            } else if (move.color === 'w') {\n                /* store the previous generated move_string if we have one */\n                if (move_string.length) {\n                    moves.push(move_string);\n                }\n                move_string = this.move_number + '.';\n            }\n\n            move_string = move_string + ' ' + this.move_to_san(move, false);\n            this.make_move(move);\n        }\n\n        /* are there any other leftover moves? */\n        if (move_string.length) {\n            moves.push(move_string);\n        }\n\n        /* is there a result? */\n        if (typeof this.header.Result !== 'undefined') {\n            moves.push(this.header.Result);\n        }\n\n        /* history should be back to what is was before we started generating PGN,\n         * so join together moves\n         */\n        if (max_width === 0) {\n            return result.join('') + moves.join(' ');\n        }\n\n        /* wrap the PGN output at max_width */\n        let current_width = 0;\n        for (let i2 = 0; i2 < moves.length; i2++) {\n            /* if the current move will push past max_width */\n            if (current_width + moves[i2].length > max_width && i2 !== 0) {\n\n                /* don't end the line with whitespace */\n                if (result[result.length - 1] === ' ') {\n                    result.pop();\n                }\n\n                result.push(newline);\n                current_width = 0;\n            } else if (i2 !== 0) {\n                result.push(' ');\n                current_width++;\n            }\n            result.push(moves[i2]);\n            current_width += moves[i2].length;\n        }\n\n        return result.join('');\n    }\n\n    public load_pgn(pgn, options) {\n        // allow the user to specify the sloppy move parser to work around over\n        // disambiguation bugs in Fritz and Chessbase\n        const sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n            options.sloppy : false;\n\n        function mask(str) {\n            return str.replace(/\\\\/g, '\\\\');\n        }\n\n        function has_keys(object) {\n            for (const key in object) {\n                return true;\n            }\n            return false;\n        }\n\n        function parse_pgn_header(header, hOptions) {\n            const hNewline_char = (typeof hOptions === 'object' &&\n                typeof hOptions.newline_char === 'string') ?\n                hOptions.newline_char : '\\r?\\n';\n            const header_obj = {};\n            const lHeaders = header.split(new RegExp(mask(hNewline_char)));\n            let key = '';\n            let value = '';\n\n            for (let i = 0; i < lHeaders.length; i++) {\n                key = lHeaders[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1');\n                value = lHeaders[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1');\n                if (this.trim(key).length > 0) {\n                    header_obj[key] = value;\n                }\n            }\n\n            return header_obj;\n        }\n\n        const newline_char = (typeof options === 'object' &&\n            typeof options.newline_char === 'string') ?\n            options.newline_char : '\\r?\\n';\n        const regex = new RegExp('^(\\\\[(.|' + mask(newline_char) + ')*\\\\])' +\n            '(' + mask(newline_char) + ')*' +\n            '1.(' + mask(newline_char) + '|.)*$', 'g');\n\n        /* get header part of the PGN file */\n        let header_string = pgn.replace(regex, '$1');\n\n        /* no info part given, begins with moves */\n        if (header_string[0] !== '[') {\n            header_string = '';\n        }\n\n        this.reset();\n\n        /* parse PGN header */\n        const headers = parse_pgn_header(header_string, options);\n        for (const key in headers) {\n            this.set_header([key, headers[key]]);\n        }\n\n        /* load the starting position indicated by [Setup '1'] and\n        * [FEN position] */\n        if (headers['SetUp'] === '1') {\n            if (!(('FEN' in headers) && this.load(headers['FEN']))) {\n                return false;\n            }\n        }\n\n        /* delete header to get the moves */\n        let ms = pgn.replace(header_string, '').replace(new RegExp(mask(newline_char), 'g'), ' ');\n\n        /* delete comments */\n        ms = ms.replace(/(\\{[^}]+\\})+?/g, '');\n\n        /* delete recursive annotation variations */\n        const rav_regex = /(\\([^\\(\\)]+\\))+?/g;\n        while (rav_regex.test(ms)) {\n            ms = ms.replace(rav_regex, '');\n        }\n\n        /* delete move numbers */\n        ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\n\n        /* delete ... indicating black to move */\n        ms = ms.replace(/\\.\\.\\./g, '');\n\n        /* delete numeric annotation glyphs */\n        ms = ms.replace(/\\$\\d+/g, '');\n\n        /* trim and get array of moves */\n        let moves = this.trim(ms).split(new RegExp(/\\s+/));\n\n        /* delete empty entries */\n        moves = moves.join(',').replace(/,,+/g, ',').split(',');\n        let move = '';\n\n        for (let half_move = 0; half_move < moves.length - 1; half_move++) {\n            move = this.move_from_san(moves[half_move], sloppy);\n\n            /* move not possible! (don't clear the board to examine to show the\n             * latest valid position)\n             */\n            if (move === undefined) {\n                return false;\n            } else {\n                this.make_move(move);\n            }\n        }\n\n        /* examine last move */\n        move = moves[moves.length - 1];\n        if (this.POSSIBLE_RESULTS.indexOf(move) > -1) {\n            if (has_keys(this.header) && typeof this.header.Result === 'undefined') {\n                this.set_header(['Result', move]);\n            }\n        } else {\n            move = this.move_from_san(move, sloppy);\n            if (move === undefined) {\n                return false;\n            } else {\n                this.make_move(move);\n            }\n        }\n        return true;\n    }\n\n    public getHeader() {\n        return this.set_header(arguments);\n    }\n\n    public move(move: Move | string, options?) {\n        /* The move function can be called with in the following parameters:\n                 *\n                 * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n                 *\n                 * .move({ from: 'h7', <- where the 'move' is a move object (additional\n                 *         to :'h8',      fields are ignored)\n                 *         promotion: 'q',\n                 *      })\n                 */\n\n        // allow the user to specify the sloppy move parser to work around over\n        // disambiguation bugs in Fritz and Chessbase\n        const sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n            options.sloppy : false;\n\n        let move_obj;\n\n        if (typeof move === 'string') {\n            move_obj = this.move_from_san(move, sloppy);\n        } else if (typeof move === 'object') {\n            const moves = this.generate_moves();\n\n            /* convert the pretty move object to an ugly move object */\n            for (let i = 0, len = moves.length; i < len; i++) {\n                if (move.from === this.algebraic(moves[i].from) &&\n                    move.to === this.algebraic(moves[i].to) &&\n                    (!('promotion' in moves[i]) ||\n                        move.promotion === moves[i].promotion)) {\n                    move_obj = moves[i];\n                    break;\n                }\n            }\n        }\n\n        /* failed to find move */\n        if (!move_obj) {\n            return undefined;\n        }\n\n        /* need to make a copy of move because we can't generate SAN after the\n         * move is made\n         */\n        const pretty_move = this.make_pretty(move_obj);\n\n        this.make_move(move_obj);\n        this.onChange.emit();\n        return pretty_move;\n    }\n\n    public undo() {\n        const move = this.undo_move();\n        this.onChange.emit();\n        return (move) ? this.make_pretty(move) : undefined;\n    }\n\n    public square_color(square) {\n        if (square in this.SQUARES) {\n            const sq_0x88 = this.SQUARES[square];\n            return ((this.rank(sq_0x88) + this.file(sq_0x88)) % 2 === 0) ? 'light' : 'dark';\n        }\n\n        return undefined;\n    }\n\n    public getHistory(options) {\n        const reversed_history = [];\n        const move_history = [];\n        const verbose = (typeof options !== 'undefined' && 'verbose' in options &&\n            options.verbose);\n\n        while (history.length > 0) {\n            reversed_history.push(this.undo_move());\n        }\n\n        while (reversed_history.length > 0) {\n            const move = reversed_history.pop();\n            if (verbose) {\n                move_history.push(this.make_pretty(move));\n            } else {\n                move_history.push(this.move_to_san(move));\n            }\n            this.make_move(move);\n        }\n\n        return move_history;\n    }\n\n} // End of Chess class\n\nexport class FenValidationResult {\n    // { valid: true, error_number: 0, error: errors[0] };\n    valid: boolean;\n    error_number: number;\n    error: string;\n}\n\nexport class ChessPiece {\n    color;\n    type;\n}\n\n// enum Colour {\n//     WHITE = 'w',\n//     BLACK = 'b'\n// }\n\nclass Castling {\n    w: any;\n    b: any;\n}\n\n\n\n\n","/*\n * Public API Surface of chess-ts\n */\n\nexport * from './lib/chess';\nexport * from './lib/chess-enums';\n","export default \".bullets {\\n    list-style-type: none;\\n    display: inline-block; \\n    font-weight: normal;\\n    padding-left: 5px;\\n    word-break: break-all;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIscUJBQXFCO0FBQ3pCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnVsbGV0cyB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59Il19 */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Chess } from 'chess-ts';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'chess-ts-app';\n  output = new Array<string>();\n\n  async ngOnInit() {\n    let p = new Promise<void>((resolve) => {\n      let chess = new Chess();\n      this.output.push(\"Starting fen: \" + chess.fen);\n    });\n  }\n}\n","export default \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n \\n  <section>\\n    <ul class=\\\"bullets\\\">\\n        <li *ngFor=\\\"let line of output\\\">{{ line }}</li>\\n    </ul>\\n</section>\\n\\n\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}